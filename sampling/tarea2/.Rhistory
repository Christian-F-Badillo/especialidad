guides(colour = guide_legend(title = "")) +
scale_color_discrete(labels=c("Valor Real", "Valor Estimado")) +
theme_minimal()
ggplot(data = edad.p.entidad.MM) +
geom_point(aes(x = Entidad, y = Val.Real, colour = "blue"), size = 2.25) +
geom_point(aes(x = Entidad, y = Edad, colour = "yellowgreen"), size = 2.25) +
geom_errorbar(aes(ymin = `2.5 %`, ymax = `97.5 %`, x = Entidad, colour = "yellowgreen")) +
labs(x = "Entidad", y = "Edad", title = "Edad Promedio de Mujeres Contrayentes por Entidad con IC del 95%") +
guides(colour = guide_legend(title = "")) +
theme(axis. text. x = element_text(angle = 90)) +
ggplot(data = edad.p.entidad.MM) +
geom_point(aes(x = Entidad, y = Val.Real, colour = "blue"), size = 2.25) +
geom_point(aes(x = Entidad, y = Edad, colour = "yellowgreen"), size = 2.25) +
geom_errorbar(aes(ymin = `2.5 %`, ymax = `97.5 %`, x = Entidad, colour = "yellowgreen")) +
labs(x = "Entidad", y = "Edad", title = "Edad Promedio de Mujeres Contrayentes por Entidad con IC del 95%") +
guides(colour = guide_legend(title = "")) +
theme(axis.text.x = element_text(angle = 90)) +
scale_color_discrete(labels=c("Valor Real", "Valor Estimado")) +
theme_minimal()
ggplot(data = edad.p.entidad.MM) +
geom_point(aes(x = Entidad, y = Val.Real, colour = "blue"), size = 2.25) +
geom_point(aes(x = Entidad, y = Edad, colour = "yellowgreen"), size = 2.25) +
geom_errorbar(aes(ymin = `2.5 %`, ymax = `97.5 %`, x = Entidad, colour = "yellowgreen")) +
labs(x = "Entidad", y = "Edad", title = "Edad Promedio de Mujeres Contrayentes por Entidad con IC del 95%") +
guides(colour = guide_legend(title = "")) +
theme(axis.text.x = element_text(angle = 90)) +
scale_color_discrete(labels=c("Valor Real", "Valor Estimado")) +
theme_minimal()
ggplot(data = edad.p.entidad.MM) +
geom_point(aes(x = Entidad, y = Val.Real, colour = "blue"), size = 2.25) +
geom_point(aes(x = Entidad, y = Edad, colour = "yellowgreen"), size = 2.25) +
geom_errorbar(aes(ymin = `2.5 %`, ymax = `97.5 %`, x = Entidad, colour = "yellowgreen")) +
labs(x = "Entidad", y = "Edad", title = "Edad Promedio de Mujeres Contrayentes por Entidad con IC del 95%") +
guides(colour = guide_legend(title = "")) +
theme(axis.text.x = element_text(angle = 90)) +
scale_color_discrete(labels=c("Valor Real", "Valor Estimado")) +
theme_minimal()
ggplot(data = edad.p.entidad.MM) +
geom_point(aes(x = Entidad, y = Val.Real, colour = "blue"), size = 2.25) +
geom_point(aes(x = Entidad, y = Edad, colour = "yellowgreen"), size = 2.25) +
geom_errorbar(aes(ymin = `2.5 %`, ymax = `97.5 %`, x = Entidad, colour = "yellowgreen")) +
labs(x = "Entidad", y = "Edad", title = "Edad Promedio de Mujeres Contrayentes por Entidad con IC del 95%") +
guides(colour = guide_legend(title = "")) +
scale_color_discrete(labels=c("Valor Real", "Valor Estimado")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90))
#- ---------------------------------------------------------------------------------------------------
#- Actividad Laboral de los Contrayentes
Act.Lab <- c(sample$OCUP_CON1, sample$OCUP_CON2)
act.lab.con <- table(Act.Lab)
act.lab.con
total_muestra <- sum(act.lab.con)  # Total de la muestra (2000)
propo.act.lab.con <- act.lab.con / n
propo.act.lab.con <- propo.act.lab.con[2]
varianza_proporcion <- (N - n) / (N - 1) * (propo.act.lab.con * (1 - propo.act.lab.con) / n)
varianza_proporcion
act.lab.con <- table(Act.Lab)
act.lab.con
propo.act.lab.con <- act.lab.con / n
propo.act.lab.con <- propo.act.lab.con
varianza_proporcion <- (N - n) / (N - 1) * (propo.act.lab.con * (1 - propo.act.lab.con) / n)
varianza_proporcion
z <- 1.96  # Valor crítico para un IC del 95%
limite_inferior <- propo.act.lab.con - z * sqrt(varianza_proporcion)
limite_superior <- propo.act.lab.con + z * sqrt(varianza_proporcion)
z <- 1.96  # Valor crítico para un IC del 95%
limite_inferior <- propo.act.lab.con - z * sqrt(varianza_proporcion)
limite_superior <- propo.act.lab.con + z * sqrt(varianza_proporcion)
limite_inferior <- as.vector(round(limite_inferior * N))
total.act.lab.con <- as.vector(round(propo.act.lab.con * N))
limite_superior <- as.vector(round(limite_superior * N))
res.act.lab.con <- data.frame(
#real = real.total.MM,
total.est = total.MM.mat,
pop.est = propo.MM.mat,
l.ci = limite_inferior,
u.ci = limite_superior
)
View(res.act.lab.con)
res.act.lab.con <- data.frame(
#real = real.total.MM,
total.est = total.act.lab.con,
pop.est = propo.act.lab.con,
l.ci = limite_inferior,
u.ci = limite_superior
)
propo.act.lab.con <- act.lab.con / n
varianza_proporcion <- (N - total_muestra) / (N - 1) * (propo.act.lab.con * (1 - propo.act.lab.con) / n)
varianza_proporcion
z <- 1.96  # Valor crítico para un IC del 95%
limite_inferior <- propo.act.lab.con - z * sqrt(varianza_proporcion)
limite_superior <- propo.act.lab.con + z * sqrt(varianza_proporcion)
limite_inferior <- as.vector(round(limite_inferior * N))
total.MM.mat <- as.vector(round(propo.act.lab.con * N))
limite_superior <- as.vector(round(limite_superior * N))
real.total.MM <- 65
res.act.lab.con <- data.frame(
#real = total.MM.mat,
total.est = total.MM.mat,
pop.est = propo.act.lab.con,
l.ci = limite_inferior,
u.ci = limite_superior
)
propo.act.lab.con <- as.vector(propo.act.lab.con)
res.act.lab.con <- data.frame(
#real = total.MM.mat,
total.est = total.MM.mat,
pop.est = propo.act.lab.con,
l.ci = limite_inferior,
u.ci = limite_superior
)
propo.act.lab.con <- act.lab.con / n
res.act.lab.con <- data.frame(
#real = total.MM.mat,
total.est = total.MM.mat,
pop.est = propo.act.lab.con,
l.ci = limite_inferior,
u.ci = limite_superior
)
propo.act.lab.con <- as.vector(propo.act.lab.con)
res.act.lab.con <- data.frame(
#real = total.MM.mat,
act.lab = sort(unique(Act.Lab)),
total.est = total.MM.mat,
pop.est = propo.act.lab.con,
l.ci = limite_inferior,
u.ci = limite_superior
)
res.act.lab.con <- res.act.lab.con %>%
res.act.lab.con <- res.act.lab.con %>%
OCUP_CON1 == 1 ~ "Funcionarios, directores y jefes",
res.act.lab.con <- res.act.lab.con %>%
mutate(act_laboral1 = case_when(
act.lab == 1 ~ "Funcionarios, directores y jefes",
act.lab == 2 ~ "Profesionistas y técnicos",
act.lab == 3 ~ "Trabajadores auxiliares en actividades administrativas",
act.lab == 4 ~ "Comerciantes, empleados en ventas y agentes de ventas",
act.lab == 5 ~ "Trabajadores en servicios personales y vigilancia",
act.lab == 6 ~ "Trabajadores en actividades agrícolas, ganaderas, forestales, caza y pesca",
act.lab == 7 ~ "Trabajadores artesanales",
act.lab == 8 ~ "Operadores de maquinaria industrial, ensambladores, choferes y transporte",
act.lab == 9 ~ "Trabajadores en actividades elementales y de apoyo",
act.lab == 10 ~ "Busca trabajo",
act.lab == 11 ~ "No trabaja",
act.lab == 97 ~ "No aplica a menores de 5 años",
act.lab == 98 ~ "Insuficientemente especificada",
act.lab == 99 ~ "No especificada",
TRUE ~ NA_character_
))
act.lab.con
res.act.lab.con <- data.frame(
#real = total.MM.mat,
act.lab = sort(unique(Act.Lab)),
total.est = total.act.lab.con,
pop.est = propo.act.lab.con,
l.ci = limite_inferior,
u.ci = limite_superior
)
res.act.lab.con <- rbind(res.act.lab.con, c(1, 10, 0, 0, 0, 0))
res.act.lab.con <- data.frame(
#real = total.MM.mat,
act.lab = sort(unique(Act.Lab)),
total.est = total.act.lab.con,
pop.est = propo.act.lab.con,
l.ci = limite_inferior,
u.ci = limite_superior
)
res.act.lab.con <- rbind(res.act.lab.con, c(1, 10, 0, 0, 0))
res.act.lab.con <- res.act.lab.con %>%
mutate(act_laboral1 = case_when(
act.lab == 1 ~ "Funcionarios, directores y jefes",
act.lab == 2 ~ "Profesionistas y técnicos",
act.lab == 3 ~ "Trabajadores auxiliares en actividades administrativas",
act.lab == 4 ~ "Comerciantes, empleados en ventas y agentes de ventas",
act.lab == 5 ~ "Trabajadores en servicios personales y vigilancia",
act.lab == 6 ~ "Trabajadores en actividades agrícolas, ganaderas, forestales, caza y pesca",
act.lab == 7 ~ "Trabajadores artesanales",
act.lab == 8 ~ "Operadores de maquinaria industrial, ensambladores, choferes y transporte",
act.lab == 9 ~ "Trabajadores en actividades elementales y de apoyo",
act.lab == 10 ~ "Busca trabajo",
act.lab == 11 ~ "No trabaja",
act.lab == 97 ~ "No aplica a menores de 5 años",
act.lab == 98 ~ "Insuficientemente especificada",
act.lab == 99 ~ "No especificada",
TRUE ~ NA_character_
))
res.act.lab.con <- data.frame(
#real = total.MM.mat,
act.lab = sort(unique(Act.Lab)),
total.est = total.act.lab.con,
pop.est = propo.act.lab.con,
l.ci = limite_inferior,
u.ci = limite_superior
)
res.act.lab.con <- rbind(res.act.lab.con, c(10, 1, 0, 0, 0))
res.act.lab.con <- res.act.lab.con %>%
mutate(act_laboral1 = case_when(
act.lab == 1 ~ "Funcionarios, directores y jefes",
act.lab == 2 ~ "Profesionistas y técnicos",
act.lab == 3 ~ "Trabajadores auxiliares en actividades administrativas",
act.lab == 4 ~ "Comerciantes, empleados en ventas y agentes de ventas",
act.lab == 5 ~ "Trabajadores en servicios personales y vigilancia",
act.lab == 6 ~ "Trabajadores en actividades agrícolas, ganaderas, forestales, caza y pesca",
act.lab == 7 ~ "Trabajadores artesanales",
act.lab == 8 ~ "Operadores de maquinaria industrial, ensambladores, choferes y transporte",
act.lab == 9 ~ "Trabajadores en actividades elementales y de apoyo",
act.lab == 10 ~ "Busca trabajo",
act.lab == 11 ~ "No trabaja",
act.lab == 97 ~ "No aplica a menores de 5 años",
act.lab == 98 ~ "Insuficientemente especificada",
act.lab == 99 ~ "No especificada",
TRUE ~ NA_character_
))
res.act.lab.con <- data.frame(
#real = total.MM.mat,
act.lab = sort(unique(Act.Lab)),
total.est = total.act.lab.con,
pop.est = propo.act.lab.con,
l.ci = limite_inferior,
u.ci = limite_superior
)
res.act.lab.con <- rbind(res.act.lab.con, c(10, 0, 0, 0, 0))
res.act.lab.con <- res.act.lab.con %>%
mutate(act_laboral1 = case_when(
act.lab == 1 ~ "Funcionarios, directores y jefes",
act.lab == 2 ~ "Profesionistas y técnicos",
act.lab == 3 ~ "Trabajadores auxiliares en actividades administrativas",
act.lab == 4 ~ "Comerciantes, empleados en ventas y agentes de ventas",
act.lab == 5 ~ "Trabajadores en servicios personales y vigilancia",
act.lab == 6 ~ "Trabajadores en actividades agrícolas, ganaderas, forestales, caza y pesca",
act.lab == 7 ~ "Trabajadores artesanales",
act.lab == 8 ~ "Operadores de maquinaria industrial, ensambladores, choferes y transporte",
act.lab == 9 ~ "Trabajadores en actividades elementales y de apoyo",
act.lab == 10 ~ "Busca trabajo",
act.lab == 11 ~ "No trabaja",
act.lab == 97 ~ "No aplica a menores de 5 años",
act.lab == 98 ~ "Insuficientemente especificada",
act.lab == 99 ~ "No especificada",
TRUE ~ NA_character_
))
mapa_abreviaturas <- c(
"Funcionarios, directores y jefes" = "Func/dir/jefes",
"Profesionistas y técnicos" = "Prof/tecn",
"Trabajadores auxiliares en actividades administrativas" = "Auxadmin",
"Comerciantes, empleados en ventas y agentes de ventas" = "Comer/agent",
"Trabajadores en servicios personales y vigilancia" = "Serv/vig",
"Trabajadores en actividades agrícolas, ganaderas, forestales, caza y pesca" = "Agric",
"Trabajadores artesanales" = "Artesa",
"Operadores de maquinaria industrial, ensambladores, choferes y transporte" = "indust/transp",
"Trabajadores en actividades elementales y de apoyo" = "Elemen/apoyo",
"Busca trabajo" = "BuscaT",
"No trabaja" = "NT",
"No aplica a menores de 5 años" = "NA<5",
"Insuficientemente especificada" = "InsEsp",
"No especificada" = "NE")
res.act.lab.con <- res.act.lab.con %>%
mutate(abreviatura = recode(actividad_laboral, !!!mapa_abreviaturas))
res.act.lab.con <- data.frame(
#real = total.MM.mat,
act.lab = sort(unique(Act.Lab)),
total.est = total.act.lab.con,
pop.est = propo.act.lab.con,
l.ci = limite_inferior,
u.ci = limite_superior
)
res.act.lab.con <- rbind(res.act.lab.con, c(10, 0, 0, 0, 0))
res.act.lab.con <- res.act.lab.con %>%
mutate(act_laboral = case_when(
act.lab == 1 ~ "Funcionarios, directores y jefes",
act.lab == 2 ~ "Profesionistas y técnicos",
act.lab == 3 ~ "Trabajadores auxiliares en actividades administrativas",
act.lab == 4 ~ "Comerciantes, empleados en ventas y agentes de ventas",
act.lab == 5 ~ "Trabajadores en servicios personales y vigilancia",
act.lab == 6 ~ "Trabajadores en actividades agrícolas, ganaderas, forestales, caza y pesca",
act.lab == 7 ~ "Trabajadores artesanales",
act.lab == 8 ~ "Operadores de maquinaria industrial, ensambladores, choferes y transporte",
act.lab == 9 ~ "Trabajadores en actividades elementales y de apoyo",
act.lab == 10 ~ "Busca trabajo",
act.lab == 11 ~ "No trabaja",
act.lab == 97 ~ "No aplica a menores de 5 años",
act.lab == 98 ~ "Insuficientemente especificada",
act.lab == 99 ~ "No especificada",
TRUE ~ NA_character_
))
mapa_abreviaturas <- c(
"Funcionarios, directores y jefes" = "Func/dir/jefes",
"Profesionistas y técnicos" = "Prof/tecn",
"Trabajadores auxiliares en actividades administrativas" = "Auxadmin",
"Comerciantes, empleados en ventas y agentes de ventas" = "Comer/agent",
"Trabajadores en servicios personales y vigilancia" = "Serv/vig",
"Trabajadores en actividades agrícolas, ganaderas, forestales, caza y pesca" = "Agric",
"Trabajadores artesanales" = "Artesa",
"Operadores de maquinaria industrial, ensambladores, choferes y transporte" = "indust/transp",
"Trabajadores en actividades elementales y de apoyo" = "Elemen/apoyo",
"Busca trabajo" = "BuscaT",
"No trabaja" = "NT",
"No aplica a menores de 5 años" = "NA<5",
"Insuficientemente especificada" = "InsEsp",
"No especificada" = "NE")
res.act.lab.con <- res.act.lab.con %>%
mutate(abreviatura = recode(act_laboral, !!!mapa_abreviaturas))
real.act.lab.con <- c(506, 5196, 663, 2013, 766, 1860, 2709, 849, 752, 1, 10627, 12851, 1207)
res.act.lab.con <- data.frame(
act.lab = sort(unique(Act.Lab)),
total.est = total.act.lab.con,
pop.est = propo.act.lab.con,
l.ci = limite_inferior,
u.ci = limite_superior
)
res.act.lab.con <- rbind(res.act.lab.con, c(10, 0, 0, 0, 0))
res.act.lab.con < cbin(res.act.lab.con, real.act.lab.con)
res.act.lab.con < cbinc(res.act.lab.con, real.act.lab.con)
res.act.lab.con < cbind(res.act.lab.con, real.act.lab.con)
real.act.lab.con <- c(506, 5196, 663, 2013, 766, 1860, 2709, 849, 752, 10627, 12851, 1207)
res.act.lab.con <- data.frame(
val.real = real.act.lab.con,
act.lab = sort(unique(Act.Lab)),
total.est = total.act.lab.con,
pop.est = propo.act.lab.con,
l.ci = limite_inferior,
u.ci = limite_superior
)
res.act.lab.con <- rbind(res.act.lab.con, c(10, 1, 0, 0, 0, 0))
res.act.lab.con <- data.frame(
val.real = real.act.lab.con,
act.lab = sort(unique(Act.Lab)),
total.est = total.act.lab.con,
pop.est = propo.act.lab.con,
l.ci = limite_inferior,
u.ci = limite_superior
)
res.act.lab.con <- rbind(res.act.lab.con, c(1, 10, 0, 0, 0, 0))
res.act.lab.con <- res.act.lab.con %>%
mutate(act_laboral = case_when(
act.lab == 1 ~ "Funcionarios, directores y jefes",
act.lab == 2 ~ "Profesionistas y técnicos",
act.lab == 3 ~ "Trabajadores auxiliares en actividades administrativas",
act.lab == 4 ~ "Comerciantes, empleados en ventas y agentes de ventas",
act.lab == 5 ~ "Trabajadores en servicios personales y vigilancia",
act.lab == 6 ~ "Trabajadores en actividades agrícolas, ganaderas, forestales, caza y pesca",
act.lab == 7 ~ "Trabajadores artesanales",
act.lab == 8 ~ "Operadores de maquinaria industrial, ensambladores, choferes y transporte",
act.lab == 9 ~ "Trabajadores en actividades elementales y de apoyo",
act.lab == 10 ~ "Busca trabajo",
act.lab == 11 ~ "No trabaja",
act.lab == 97 ~ "No aplica a menores de 5 años",
act.lab == 98 ~ "Insuficientemente especificada",
act.lab == 99 ~ "No especificada",
TRUE ~ NA_character_
))
mapa_abreviaturas <- c(
"Funcionarios, directores y jefes" = "Func/dir/jefes",
"Profesionistas y técnicos" = "Prof/tecn",
"Trabajadores auxiliares en actividades administrativas" = "Auxadmin",
"Comerciantes, empleados en ventas y agentes de ventas" = "Comer/agent",
"Trabajadores en servicios personales y vigilancia" = "Serv/vig",
"Trabajadores en actividades agrícolas, ganaderas, forestales, caza y pesca" = "Agric",
"Trabajadores artesanales" = "Artesa",
"Operadores de maquinaria industrial, ensambladores, choferes y transporte" = "indust/transp",
"Trabajadores en actividades elementales y de apoyo" = "Elemen/apoyo",
"Busca trabajo" = "BuscaT",
"No trabaja" = "NT",
"No aplica a menores de 5 años" = "NA<5",
"Insuficientemente especificada" = "InsEsp",
"No especificada" = "NE")
res.act.lab.con <- res.act.lab.con %>%
mutate(abreviatura = recode(act_laboral, !!!mapa_abreviaturas))
ggplot(data = res.act.lab.con) +
geom_point(aes(x = abreviatura, y = val.real, colour = "blue"), size = 2.25) +
geom_point(aes(x = abreviatura, y = total.est, colour = "yellowgreen"), size = 2.25) +
geom_errorbar(aes(ymin = l.ci, ymax = u.ci, x = abreviatura, colour = "yellowgreen")) +
labs(x = "Entidad", y = "Edad", title = "Edad Promedio de Mujeres Contrayentes por Entidad con IC del 95%") +
guides(colour = guide_legend(title = "")) +
scale_color_discrete(labels=c("Valor Real", "Valor Estimado")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90))
ggplot(data = res.act.lab.con) +
geom_point(aes(x = abreviatura, y = val.real, colour = "blue"), size = 2.25) +
geom_point(aes(x = abreviatura, y = total.est, colour = "yellowgreen"), size = 2.25) +
geom_errorbar(aes(ymin = l.ci, ymax = u.ci, x = abreviatura, colour = "yellowgreen")) +
labs(x = "Entidad", y = "Edad", title = "Edad Promedio de Mujeres Contrayentes por Entidad con IC del 95%") +
guides(colour = guide_legend(title = "")) +
scale_color_discrete(labels=c("Valor Real", "Valor Estimado")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45))
ggplot(data = res.act.lab.con) +
geom_point(aes(x = abreviatura, y = val.real, colour = "blue"), size = 2.25) +
geom_point(aes(x = abreviatura, y = total.est, colour = "yellowgreen"), size = 2.25) +
geom_errorbar(aes(ymin = l.ci, ymax = u.ci, x = abreviatura, colour = "yellowgreen")) +
labs(x = "Entidad", y = "Edad", title = "Ocupaciones de los contrayentes con IC del 95%") +
guides(colour = guide_legend(title = "")) +
scale_color_discrete(labels=c("Valor Real", "Valor Estimado")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45))
ggplot(data = res.act.lab.con) +
geom_point(aes(x = abreviatura, y = val.real, colour = "blue"), size = 2.25) +
geom_point(aes(x = abreviatura, y = total.est, colour = "yellowgreen"), size = 2.25) +
geom_errorbar(aes(ymin = l.ci, ymax = u.ci, x = abreviatura, colour = "yellowgreen")) +
labs(x = "Ocupación",
y = "Total",
title = "Ocupaciones de los contrayentes con IC del 95%") +
guides(colour = guide_legend(title = "")) +
scale_color_discrete(labels=c("Valor Real", "Valor Estimado")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45))
#- ---------------------------------------------------------------------------------------------------------------
#- Escolaridad Contrayentes por Entidad Federativa
Esc.p.entidad <- sample[c("ENT_REGIS", "ESCOL_CON1")]
Esc.p <- sample[c("ENT_REGIS", "ESCOL_CON2")]
View(Esc.p.entidad)
View(Esc.p)
colnames(Esc.p.entidad) <- c("Entidad", "Escolaridad")
colnames(Esc.p) <- c("Entidad", "Escolaridad")
View(Esc.p.entidad)
Esc.p.entidad <- rbind(Esc.p.entidad, Esc.p)
#- ---------------------------------------------------------------------------------------------------------------
#- Escolaridad Contrayentes por Entidad Federativa
Esc.p.entidad <- sample[c("ENT_REGIS", "ESCOL_CON1")]
Esc.p <- sample[c("ENT_REGIS", "ESCOL_CON2")]
colnames(Esc.p.entidad) <- c("Entidad", "Escolaridad")
colnames(Esc.p) <- c("Entidad", "Escolaridad")
Esc.p.entidad <- rbind(Esc.p.entidad, Esc.p)
Edad.p.entidad <- cbind(Edad.p.entidad, N)
Edad.p.entidad <- as.data.frame(Edad.p.entidad)
Esc.p.entidad <- cbind(Edad.p.entidad, N)
#- ---------------------------------------------------------------------------------------------------------------
#- Escolaridad Contrayentes por Entidad Federativa
Esc.p.entidad <- sample[c("ENT_REGIS", "ESCOL_CON1")]
Esc.p <- sample[c("ENT_REGIS", "ESCOL_CON2")]
colnames(Esc.p.entidad) <- c("Entidad", "Escolaridad")
colnames(Esc.p) <- c("Entidad", "Escolaridad")
Esc.p.entidad <- rbind(Esc.p.entidad, Esc.p)
Esc.p.entidad <- cbind(Edad.p.entidad, N)
Esc.p.entidad <- as.data.frame(Edad.p.entidad)
View(Esc.p.entidad)
#- ---------------------------------------------------------------------------------------------------------------
#- Escolaridad Contrayentes por Entidad Federativa
Esc.p.entidad <- sample[c("ENT_REGIS", "ESCOL_CON1")]
Esc.p <- sample[c("ENT_REGIS", "ESCOL_CON2")]
colnames(Esc.p.entidad) <- c("Entidad", "Escolaridad")
colnames(Esc.p) <- c("Entidad", "Escolaridad")
Esc.p.entidad
View(Esc.p.entidad)
#- ---------------------------------------------------------------------------------------------------------------
#- Escolaridad Contrayentes por Entidad Federativa
Esc.p.entidad <- sample[c("ENT_REGIS", "ESCOL_CON1")]
Esc.p <- sample[c("ENT_REGIS", "ESCOL_CON2")]
colnames(Esc.p.entidad) <- c("Entidad", "Escolaridad")
colnames(Esc.p) <- c("Entidad", "Escolaridad")
Esc.p.entidad <- rbind(Esc.p.entidad, Esc.p)
Esc.p.entidad <- cbind(Edad.p.entidad, N)
#- ---------------------------------------------------------------------------------------------------------------
#- Escolaridad Contrayentes por Entidad Federativa
Esc.p.entidad <- sample[c("ENT_REGIS", "ESCOL_CON1")]
Esc.p <- sample[c("ENT_REGIS", "ESCOL_CON2")]
colnames(Esc.p.entidad) <- c("Entidad", "Escolaridad")
colnames(Esc.p) <- c("Entidad", "Escolaridad")
Esc.p.entidad <- rbind(Esc.p.entidad, Esc.p)
Esc.p.entidad <- cbind(Esc.p.entidad, N)
Esc.p.entidad <- as.data.frame(Edad.p.entidad)
View(Esc.p.entidad)
View(Esc.p.entidad)
#- ---------------------------------------------------------------------------------------------------------------
#- Escolaridad Contrayentes por Entidad Federativa
Esc.p.entidad <- sample[c("ENT_REGIS", "ESCOL_CON1")]
Esc.p <- sample[c("ENT_REGIS", "ESCOL_CON2")]
colnames(Esc.p.entidad) <- c("Entidad", "Escolaridad")
colnames(Esc.p) <- c("Entidad", "Escolaridad")
Esc.p.entidad <- rbind(Esc.p.entidad, Esc.p)
Esc.p.entidad <- cbind(Esc.p.entidad, N)
Esc.p.entidad <- as.data.frame(Esc.p.entidad)
View(Esc.p.entidad)
disenio <- svydesign(id=~1, fpc=~N, data=Esc.p.entidad)
mean.edad.p.entidad.MM <- svyby(~Escolaridad, by= ~Entidad, design = disenio, FUN = svytotal)
disenio <- svydesign(id=~1, fpc=~N, data=Esc.p.entidad)
total.esc.p.entidad <- svyby(~Escolaridad, by= ~Entidad, design = disenio, FUN = svytotal)
total.esc.p.entidad
disenio <- svydesign(id=~1, fpc=~N, data=Esc.p.entidad)
total.esc.p.entidad <- svyby(~Entidad, by= ~Escolaridad, design = disenio, FUN = svytotal)
total.esc.p.entidad
total.esc.p.entidad <- svybys(~Escolaridad, bys = ~Entidad, design = disenio, FUN = svytotal)
total.esc.p.entidad
Esc.p.entidad$Escolaridad <- factor(Esc.p.entidad$Escolaridad, levels = unique(Esc.p.entidad$Escolaridad))
View(Esc.p.entidad)
Esc.p.entidad$Escolaridad <- factor(Esc.p.entidad$Escolaridad, levels = unique(Esc.p.entidad$Escolaridad), ordered = T)
View(Esc.p.entidad)
disenio <- svydesign(id=~1, fpc=~N, data=Esc.p.entidad)
total.esc.p.entidad <- svybys(~Escolaridad, bys = ~Entidad, design = disenio, FUN = svytotal)
total.esc.p.entidad
cis <- confint(total.esc.p.entidad)
total.esc.p.entidad
total.esc.p.entidad
class(total.esc.p.entidad)
View(total.esc.p.entidad)
unlist(total.esc.p.entidad)
total.esc.p.entidad <- unlist(total.esc.p.entidad)
cis <- confint(total.esc.p.entidad)
total.esc.p.entidad
total.esc.p.entidad <- svybys(~Escolaridad, bys = ~Entidad, design = disenio, FUN = svytotal)
total.esc.p.entidad
total.esc.p.entidad[1]
cis <- confint(total.esc.p.entidad[1])
total.esc.p.entidad[1][1]
total.esc.p.entidad[1]
total.esc.p.entidad[1, 2]
dim(total.esc.p.entidad)
total.esc.p.entidad$1
total.esc.p.entidad$`1`
total.esc.p.entidad[1][1][1]
df.total.escpent <- as.data.frame(total.esc.p.entidad)
View(df.total.escpent)
cis <- confint(df.total.escpent)
